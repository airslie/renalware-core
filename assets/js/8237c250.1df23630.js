"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[547],{8469:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=t(4848),r=t(8453);const i={title:"Creating a report"},s=void 0,o={id:"Reporting/create a report",title:"Creating a report",description:"To create a custom report you first define a SQL view (or materialised view) in Renalware's",source:"@site/docs/02-Reporting/01-create a report.md",sourceDirName:"02-Reporting",slug:"/Reporting/create a report",permalink:"/Reporting/create a report",draft:!1,unlisted:!1,editUrl:"https://github.com/airslie/renalwarev2/tree/main/documentation/docs/02-Reporting/01-create a report.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Creating a report"},sidebar:"tutorialSidebar",previous:{title:"Reporting",permalink:"/Reporting/"},next:{title:"Using materialised views",permalink:"/Reporting/using-a-materialised-view"}},l={},c=[{value:"A simple example",id:"a-simple-example",level:2},{value:"1. Create a SQL view",id:"1-create-a-sql-view",level:3},{value:"2. Let Renalware know about the view",id:"2-let-renalware-know-about-the-view",level:3},{value:"Possible values for &#39;patient_landing_page&#39;",id:"possible-values-for-patient_landing_page",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"To create a custom report you first define a SQL view (or materialised view) in Renalware's\nPostgres database, and then add an row manually to the system_view_metadata table to tell\nRenalware about it."}),"\n",(0,a.jsx)(n.h2,{id:"a-simple-example",children:"A simple example"}),"\n",(0,a.jsx)(n.h3,{id:"1-create-a-sql-view",children:"1. Create a SQL view"}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsxs)(n.p,{children:["We recommend you store your custom views in your hospital-specific schema eg ",(0,a.jsx)(n.code,{children:"renalware_kch"}),",\nand prefix the view name with  ",(0,a.jsx)(n.code,{children:"reporting"})," to make it easier to locate."]}),(0,a.jsx)(n.p,{children:"Its a good idea to test reports in a UAT/test environment before promoting to production"})]}),"\n",(0,a.jsxs)(n.p,{children:["In a SQL client like DBeaver, ",(0,a.jsx)(n.a,{href:"https://www.postgresql.org/docs/current/sql-createview.html",children:"create a SQL view"}),". In this contrived example we will create a\nSQL view that finds all patients aged 40 or under:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"CREATE OR REPLACE VIEW renalware_kch.reporting_patients_under_40 AS\n SELECT\n    P.secure_id,\n    (upper(P.family_name::text) || ', ') || p.given_name AS patient_name,\n    P.born_on as dob,\n    EXTRACT(years from AGE(P.born_on)) as age\n  FROM renalware.patients P\n  WHERE AGE(P.born_on) < '40 years';\n"})}),"\n",(0,a.jsx)(n.p,{children:"Note"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["we have created a ",(0,a.jsx)(n.code,{children:"patient_name"})," data item by concatenating ",(0,a.jsx)(n.code,{children:"given_name"})," and ",(0,a.jsx)(n.code,{children:"family_name"})," (in future versions of Renalware this column will be autogenerated and available as ",(0,a.jsx)(n.code,{children:"patients.name"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["include the ",(0,a.jsx)(n.code,{children:"secure_id"})," column if you would like to be able to click on the patient_name in the report to view the patient's details."]}),"\n",(0,a.jsxs)(n.li,{children:['all returned columns are automatically sortable, although values which are numbers inside strings (eg "123" as opposed to 123) will not sort numerically unless casted to eg an integer or float using eg ',(0,a.jsx)(n.code,{children:"::integer"}),". In the example, age (eg 24) is already a number so we don't need to cast it for it to sort. However it is actually returned as a float (eg as 24.0) so we have cast it here to an integer so it appears as eg 24 on the report."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"2-let-renalware-know-about-the-view",children:"2. Let Renalware know about the view"}),"\n",(0,a.jsxs)(n.p,{children:["Add a rows to the ",(0,a.jsx)(n.code,{children:"system_view_metadata"})," table to describe the report.\nA note on the columns:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"schema_name"})," should be the Postgres schema where you created the report eg ",(0,a.jsx)(n.code,{children:"renalware_kch"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"view_name"})," eg ",(0,a.jsx)(n.code,{children:"reporting_patients_under_40"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"scope"})," needs to be ",(0,a.jsx)(n.code,{children:"patients"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"title"})," is what appears in the list of reports, so should not be too long"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"description"})," appears on the page with the report data, so you can be more verbose here if useful"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"category"})," must be ",(0,a.jsx)(n.code,{children:"report"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"sub_category"})," is a custom string like 'Housekeeping' or 'HD' - something you can use to group related reports"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"patient_landing_page"})," can be one of a pre-defined list of values and determines where in Renalware you 'land' when clicking on the patient's name in the report. See 'Possible values for 'patient_landing_page'"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"created_at"})," and ",(0,a.jsx)(n.code,{children:"updated_at"})," are just timestamps and you can use the postgres CURRENT_TIMESTAMP macro"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Here is the SQL to add our report:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"INSERT INTO renalware.system_view_metadata\n(\n  schema_name,\n  view_name,\n  scope,\n  title,\n  description,\n  category,\n  created_at,\n  updated_at\n)\nVALUES\n(\n  'renalware',\n  'reporting_patients_under_40',\n  'patients',\n  'Patients under 40',\n  'Patients under 40 years of age',\n  'report',\n  current_timestamp,\n  current_timestamp\n);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"possible-values-for-patient_landing_page",children:"Possible values for 'patient_landing_page'"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"accesses\nadmissions\nakcc\nclinic_visits\nclinical\nclinical_summary\ndemographics\nevents\nhd\nletters\nlow_clearance\nmodalities\npathology\npd\nprescriptions\nproblems\nrenal\ntransplants_donor\ntransplants_recipient\nvirology\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Example report",src:t(4885).A+"",width:"1268",height:"1308"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"You can click on any column heading to sort the table"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},4885:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/example-report-008de574e211a67832f77e91f5aa7623.jpg"},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(6540);const r={},i=a.createContext(r);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);