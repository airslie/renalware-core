"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[127],{3835:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/example-chart-65802fe3fa060c25531154038952f471.jpg"},4978:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"Reporting/graphing","title":"Graphing","description":"This is a work in progress!","source":"@site/docs/02-Reporting/05-graphing.md","sourceDirName":"02-Reporting","slug":"/Reporting/graphing","permalink":"/Reporting/graphing","draft":false,"unlisted":false,"editUrl":"https://github.com/airslie/renalwarev2/tree/main/documentation/docs/02-Reporting/05-graphing.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Graphing"},"sidebar":"tutorialSidebar","previous":{"title":"Updating SQL views","permalink":"/Reporting/updating-views"},"next":{"title":"Testing","permalink":"/Testing/"}}');var r=t(4848),i=t(8453);const s={title:"Graphing"},o=void 0,l={},c=[{value:"Full-control via <code>chart_raw</code>",id:"full-control-via-chart_raw",level:2},{value:"Consuming your view data",id:"consuming-your-view-data",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"This is a work in progress!"})}),"\n",(0,r.jsxs)(n.h2,{id:"full-control-via-chart_raw",children:["Full-control via ",(0,r.jsx)(n.code,{children:"chart_raw"})]}),"\n",(0,r.jsxs)(n.p,{children:["Renalware currently uses ",(0,r.jsx)(n.a,{href:"https://www.highcharts.com",children:"Highcharts"})," for charting."]}),"\n",(0,r.jsxs)(n.p,{children:["When viewing a report, if you have added a jsonb definition in the ",(0,r.jsx)(n.code,{children:"chart_raw"})," column for the associated\n",(0,r.jsx)(n.code,{children:"renalware.system_view_metadata"})," row, then a tab called Chart appears."]}),"\n",(0,r.jsxs)(n.p,{children:["Whatever json you put into ",(0,r.jsx)(n.code,{children:"chart_raw"})," is used to generate the chart, but here are some things to\nnote."]}),"\n",(0,r.jsx)(n.h3,{id:"consuming-your-view-data",children:"Consuming your view data"}),"\n",(0,r.jsxs)(n.p,{children:["Highcharts works with ",(0,r.jsx)(n.code,{children:"axes"})," and ",(0,r.jsx)(n.code,{children:"series"}),", where a series is a column from your view that you want\nto plot."]}),"\n",(0,r.jsxs)(n.p,{children:["In the following example we have a SQL view with a ",(0,r.jsx)(n.code,{children:"date"})," column containing the first day in every\nweek in 2023. We then have columns ",(0,r.jsx)(n.code,{children:"series1"})," and ",(0,r.jsx)(n.code,{children:"series2"})," containing some example data."]}),"\n",(0,r.jsxs)(n.p,{children:["Our intent is to plot series1 and series2 over time. We use the ",(0,r.jsx)(n.code,{children:"date"})," column for the x axis,\nand ",(0,r.jsx)(n.code,{children:"series1"})," and ",(0,r.jsx)(n.code,{children:"series2"})," share the left hand y axis for their units\n(though we could use the right hand axis for ome of them).\nWe will make series1 a line chart and series2 a bar chart, just to be fancy."]}),"\n",(0,r.jsx)(n.p,{children:"The SQL view"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-SQL",children:"create or replace view renalware_demo.reporting_example_data as\n  with dates as (\n    SELECT date_trunc('day', dd)::date AS dt\n        FROM generate_series\n        ( '2023-01-01'::timestamp\n        , '2023-12-31'::timestamp\n        , '1 week'::interval) dd\n  )\n  select\n    dates.dt::date as date,\n    (10 + 9*random())*(row_number() over()) as series1,\n    (2 + 7*random())*(row_number() over()) as series2\n  from dates;\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Its associated row in ",(0,r.jsx)(n.code,{children:"renalware.system_view_metadata"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-SQL",children:'insert\n  into\n  system_view_metadata (schema_name,\n  view_name,\n  "scope",\n  title,\n  display_type,\n  category,\n  chart_raw)\nvalues\n(\n  \'renalware_demo\',\n  \'reporting_example_data\',\n  \'patients\',\n  \'Example report to demonstrate charting\',\n  \'tabular\',\n  \'report\',\n  \'{\n    "chart": { "type": "spline", "height": "600px", "zoomType": "xy" },\n    "title": { "text": "Chart title" },\n    "xAxis": {\n      "type": "datetime",\n      "title": { "text": "Date" },\n      "column": "date",\n      "dateTimeLabelFormats": { "day": "%e %b", "year": "%Y", "month": "%b %Y" }\n    },\n    "yAxis": { "min": 0, "title": { "text": "m/s" } },\n    "colors": ["violet", "orange", "yellow"],\n    "series": [\n      { "data": [], "name": "Series 1", "type": "line", "column": "series1" },\n      { "data": [], "name": "Series 2", "type": "column", "column": "series2" }\n    ],\n    "tooltip": {\n      "pointFormat": "{point.x:%e. %b}: {point.y:.2f} m",\n      "headerFormat": "<b>{series.name}</b><br>"\n    },\n    "subtitle": { "text": "A subtitle here" },\n    "plotOptions": {\n      "series": {\n        "marker": {\n          "radius": 2.5,\n          "symbol": "circle",\n          "enabled": true,\n          "fillColor": "#FFFFFF",\n          "lineColor": null,\n          "lineWidth": 1\n        }\n      }\n    }\n  }\'\n);\n'})}),"\n",(0,r.jsx)(n.p,{children:"The important bit here is the mapping of the series in the the json to the columns in your SQL view.\nNote the series data is just '[]' as we will inject the data at the runtime."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"series": [\n  { "data": [], "name": "Series 1", "type": "line", "column": "series1" },\n  { "data": [], "name": "Series 2", "type": "column", "column": "series2" }\n]\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Example chart",src:t(3835).A+"",width:"2066",height:"1742"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(6540);const r={},i=a.createContext(r);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);