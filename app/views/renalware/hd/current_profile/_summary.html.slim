article.hd-profile-summary
  header
    h2= t(".title")
    ul.noprint
      li= link_to t("btn.view"), patient_hd_current_profile_path(patient), class: "button"
      li= link_to t("btn.edit"), edit_patient_hd_current_profile_path(patient), class: "button"
      li
        label.trigger-masonry-refresh#toggle-full-hd-profile(for="toggle-full-hd-profile-input") Toggle full profile

  input#toggle-full-hd-profile-input(type="checkbox")

  dl.dl-horizontal.large
    dt= t(".last_update")
    dd= profile.last_update
    dt= t(".schedule")
    dd= profile.current_schedule
    dt= t(".hospital_unit")
    dd= profile.hospital_unit
    dt= t(".prescribed_time")
    dd= profile.formatted_prescribed_time
    dt= t(".hd_type")
    dd= profile.hd_type
    dt= t(".dialyser")
    dd= profile.dialyser
    dt= t(".dialysate")
    dd= profile.dialysate
    dt= t(".cannulation_type")
    dd= profile.cannulation_type
    dt= t(".anticoagulant.type")
    dd= profile.anticoagulant_type&.text

  dl.dl-horizontal.large.full-hd-profile
    dt.inset=t(".anticoagulant.loading_dose")
    dd.inset= profile.anticoagulant_loading_dose
    dt.inset= t(".anticoagulant.hourly_dose")
    dd.inset= profile.anticoagulant_hourly_dose
    dt.inset= t(".anticoagulant.stop_time")
    dd.inset= profile.anticoagulant_stop_time

    dt= t(".needle_size")
    dd= profile.needle_size
    dt= t(".single_needle")
    dd= profile.single_needle&.text
    dt= t(".blood_flow")
    dd= profile.blood_flow
    dt= t(".temperature")
    dd= profile.temperature
    dt= t(".bicarbonate")
    dd= profile.bicarbonate
    dt= t(".has_sodium_profiling")
    dd= profile.has_sodium_profiling&.text
    dt.inset= t(".sodium_first_half")
    dd.inset= profile.sodium_first_half
    dt.inset= t(".sodium_second_half")
    dd.inset= profile.sodium_second_half

    dt= t(".drugs.on_esa")
    dd= profile.drugs_on_esa&.text
    dt= t(".drugs.on_iron")
    dd= profile.drugs_on_iron&.text
    dt= t(".drugs.on_warfarin")
    dd= profile.drugs_on_warfarin&.text

    dt= t(".transport.has_transport")
    dd= profile.transport.has_transport&.text
    dt.inset= t(".transport.type")
    dd.inset= profile.transport.type&.text
    dt.inset= t(".transport.decided_on")
    dd.inset= profile.transport.present? && I18n.l(profile.transport&.decided_on)

    dt= t(".care_level.summary")
    dd= profile.care_level
