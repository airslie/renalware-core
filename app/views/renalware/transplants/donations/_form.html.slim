ruby:
  back_path = if f.object.new_record?
                patient_transplants_donor_dashboard_path(patient)
              else
                patient_transplants_donation_path(patient, f.object)
              end

.row.top
  .medium-6.columns
    = f.submit t("btn.save"), class: "button"
    '  or
    = link_to t("btn.cancel"), back_path

.form-content2
  = render layout: "renalware/shared/fieldset",
      locals: { legend: "Recipient", name: "recipient" } do
    = f.input :relationship_with_recipient, wrapper: :horizontal_medium
    = f.input :relationship_with_recipient_other, wrapper: :horizontal_medium
    br

    ruby:
      recipient = f.object.recipient
      default_value = { id: recipient.id, text: recipient.to_s(:long) } if recipient.present?

    = f.input :recipient_id,
              collection: [],
              include_blank: false,
              wrapper: :horizontal_medium,
              input_html: { \
                 class: "select2-ajax-search",
                 data: { "ajax--url" => search_patients_path(format: :json),
                         "default-value" => default_value,
                         "placeholder" => "Start entering the last name (min. 3 characters)" } \
              }

    = f.input :blood_group_compatibility,
              as: :inline_radio_buttons,
              wrapper: :horizontal_medium
    = f.input :mismatch_grade, wrapper: :horizontal_medium
    = f.input :paired_pooled_donation, wrapper: :horizontal_medium

  = render layout: "renalware/shared/fieldset",
      locals: { legend: "Admin", name: "admin" } do
    = f.input :state, wrapper: :horizontal_small
    = f.input :volunteered_on, as: :date_picker, wrapper: :horizontal_datepicker
    = f.input :first_seen_on, as: :date_picker, wrapper: :horizontal_datepicker
    = f.input :workup_completed_on, as: :date_picker, wrapper: :horizontal_datepicker
    = f.input :donated_on, as: :date_picker, wrapper: :horizontal_datepicker
    = f.input :notes, input_html: { rows: 5 }, wrapper: :horizontal_large

.row
  .large-12.columns
    = f.submit t("btn.save"), class: "button"

    '  or
    = link_to t("btn.cancel"), back_path
