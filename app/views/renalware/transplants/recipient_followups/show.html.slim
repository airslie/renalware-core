= content_for(:actions) do
  = link_to t("btn.edit"),
            edit_patient_transplants_recipient_operation_followup_path(patient,
              recipient_followup.operation),
            class: "button"

= within_patient_layout(title: recipient_followup_title(recipient_followup),
                        breadcrumbs: recipient_summary_breadcrumb(patient)) do

  .edit_timestamp= render "renalware/shared/last_update", record: recipient_followup

  .document-view
    .mgrid
      .row
        = render "renalware/shared/attributes_group",
            legend: "Transplant Outcomes", destination: "transplant_failure",
            models: { recipient_followup => [:graft_function_onset,
                                             :last_post_transplant_dialysis_on,
                                             :stent_removed_on,
                                             :return_to_regular_dialysis_on,
                                             :transplant_failed, :transplant_failed_on,
                                             :transplant_failure_cause_description,
                                             :transplant_failure_cause_other,
                                             :transplant_failure_notes,
                                             :graft_nephrectomy_on] }

        = render "renalware/shared/documents/attributes_group",
            group: recipient_followup.document.cardiovascular_complication,
            legend: "Cardiovascular Complication", destination: "cardiovascular_complication"

        = render "renalware/shared/attributes_group",
            legend: "Observations", destination: "observations",
            models: { recipient_followup.document => [:malignancy_within_first_3_months,
                                                       :malignancy_within_first_12_months,
                                                       :acute_rejection_biopsy_proven,
                                                       :recipient_pregnancy,
                                                       :primary_or_recurrent_renal_disease] }

        = render "renalware/shared/attributes_group",
            legend: "Admin", destination: "admin",
            models: { recipient_followup => [:notes] }

        .columns.small-12
          article
            header
              h2 Transplant Rejection
            = render "renalware/transplants/rejection_episodes/table",
                     episodes: recipient_followup.rejection_episodes.ordered.includes(:created_by)
