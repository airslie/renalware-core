= content_for(:filters) do
  - options = path_params.to_h.symbolize_keys
  = simple_form_for form,
            as: :form,
            url: Renalware::Engine.routes.url_for(options.merge!(only_path: true)),
            method: :get do |f|

    .row.collapse
      .columns.small-6
        .row.collapse
          .small-10.columns
            = f.input :ukt_recipient_number,
                      class: "radius",
                      wrapper: :hz_lg,
                      label: "UKT recipient number"
          .small-2.columns
            = button_tag(type: "submit",
                        class: "search-registrations button tiny postfix radius radius-right secondary",
                        style: "width: 3rem") do
              i.fas.fa-search

= content_for(:tabs) do
  ruby:
    filters = {
      all: "All",
      active: "Active",
      suspended: "Suspended",
      active_and_suspended: "Active & Suspended",
      working_up: "Working Up",
      status_mismatch: "Status Mismatch"
    }

  h2.print-only= filters[path_params[:named_filter].to_sym]

  dl.sub-nav
    - filters.each do |key, label|
      - options = path_params.merge(named_filter: key).to_h.symbolize_keys
      - path = Renalware::Engine.routes.url_for(options.merge!(only_path: true))
      = sub_nav_item(label, path)

= within_admin_layout(title: "Transplant Wait List Registrations") do
  table.report.wait-list-registrations-table
    thead
      tr
        th.noprint
        th= sort_link([:renalware, q], :patient_family_name, "Patient")
        th Hosp No
        th= sort_link([:renalware, q], :patient_born_on, "Age")
        th Sex
        th= sort_link([:renalware, q], :patient_current_modality_description_name, "Modality")
        th= sort_link([:renalware, q], :hd_site, "HD Site")
        th= sort_link([:renalware, q], :patient_current_status_description_name, "Status")
        th= sort_link([:renalware, q], :ukt_status, "UKT Status")
        th.col-width-tiny UKT No
        th.col-width-date= sort_link([:renalware, q], :esrf_on, "ESRF Date")
        th.col-width-date= sort_link([:renalware, q], :entered_on, "Entry Date")
        th DOL
        th Bld Grp
        th.col-width-tiny= sort_link([:renalware, q], :crf_highest_value, "CRF high")
        th.col-width-date CRF high date
        th= sort_link([:renalware, q], :crf_latest_value, "CRF latest")
        th.col-width-date CRF latest date
        th Sens (CRF>60)
        th Prev Ops
        th Tx Type

    tbody
      - registrations.each do |registration|
        = render "registration", registration: registration

  == pagy_nav(pagy)
