div(data-controller="conditional-display" data-conditional-display-attribute-to-test-value="savePdfToEpr")

  = simple_form_for event,
      url: url,
      as: :events_event,
      html: { autocomplete: "off" },
      wrapper: "horizontal_form" do |f|

    - if event.persisted?
      .mb-3.font-bold.text-lg= event.event_type.name

    - if event.disable_selection_of_event_type
      = f.input :event_type_id, as: :hidden
    - else
      #event-type-dropdown-container.pb-6
        = f.input :event_type_id,
                  as: :grouped_select,
                  group_method: :types,
                  group_label_method: :name,
                  collection: event_types,
                  wrapper: :horizontal_medium,
                  input_html: { \
                    id: "event-type-dropdown",
                    required: :required,
                    tabindex: 2001,
                    data: { controller: "slimselect select",
                            action: "change->select#refresh change->conditional-display#showhide" } }

    = f.input :date_time,
              as: :flatpickr_with_time,
              wrapper: :horizontal_datepicker

    = f.input :disable_selection_of_event_type, as: :hidden
    / The contents of this div will get replaced if a user selects an alternative
    / event type in the drop-down above. See events.js.
    #event-type-specific-inputs
      = render partial: event.to_input_partial_path, locals: { event: event, f: f }
    = f.label :notes

    #snippets-controller(data-controller="snippets")
      / Clicking will launch the Insert Snippet modal dialog.
      / When the user clicks on an Insert button in the modal, the snippet text is put into the
      / snippets controller destination target which currently must be a Trix editor instance.
      = link_to t("snippets.insert"),
                authoring.snippets_path(in_dialog: true),
                class: "float-right insert-snippet-button button alternative",
                data: { turbo: true, turbo_frame: "modal" }
      = f.input :notes,
                as: :trix_editor,
                class: "event-notes",
                wrapper: :zilch,
                data: { "snippets-target": "destination" }

    = f.error :notes
    br

    .hidden(data-conditional-display-target="displayable")
      .mb-6.px-2.py-1.sm:w-auto.md:w-2/3.lg:w-1/2.rounded.border.border-gray-100.bg-yellow-100.shadow
        .flex.items-start
          = inline_icon("exclamation-circle", class: "h-5 w-5 inline-block pt-1 mr-2 fill-gray-600")
          span This event cannot be changed once saved.
        .flex.items-start
          = inline_icon("pdf", class: "h-5 w-5 inline-block pt-1 mr-2 fill-gray-600")
          span A PDF copy is automatically sent to the EPR document store/s.

    = save_or_cancel(form: f, back_path: return_url)
