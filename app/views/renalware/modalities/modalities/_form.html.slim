= render "renalware/shared/errors", model: modality

.modality-form.row(data-controller="select")

  = simple_form_for modality,
                    as: :modality,
                    url: url,
                    html: { autocomplete: "off" },
                    wrapper: "horizontal_form" do |m|

      .large-9.columns

          = m.input :description_id,
                    collection: Renalware::Modalities::DescriptionPresenter.list_for_dropdown,
                    input_html: { id: "modality-description-select" },
                    wrapper: :horizontal_medium,
                    autofocus: true

          - frame_url = renalware.new_patient_modality_path(change_type_id: "REPLACE_ID")
          = m.input :change_type_id,
              label: "Type of Change",
              collection: Renalware::Modalities::ChangeTypePresenter.list_for_dropdown(frame_url),
              wrapper: :horizontal_medium,
              include_blank: false,
              input_html: { \
                data: { \
                  controller: " select-update-frame",
                  "select-update-frame-frame-id-value": "modality-change-type-dependents",
                  "action": "change->select-update-frame#change" \
                } \
              }

          = turbo_frame_tag("modality-change-type-dependents") do
            - if modality.change_type&.require_source_hospital_centre?
              .pb-4
                = m.input :source_hospital_centre_id,
                    collection: Renalware::Hospitals::Centre.ordered_for_dropdowns,
                    wrapper: :horizontal_medium,
                    required: true,
                    input_html: { data: { controller: "slimselect" } }

            - if modality.change_type&.require_destination_hospital_centre?
              .pb-4
                  = m.input :destination_hospital_centre_id,
                      collection: Renalware::Hospitals::Centre.ordered_for_dropdowns,
                      wrapper: :horizontal_medium,
                      required: true,
                      input_html: { data: { controller: "slimselect" } }

          = m.input :started_on,
                    as: :flatpickr,
                    wrapper: :horizontal_datepicker

          - if policy(modality).edit?
            = m.input :ended_on,
                      as: :flatpickr,
                      wrapper: :horizontal_datepicker
          .hide-death
            = m.input :notes,
                      as: :text,
                      input_html: { rows: 5 },
                      wrapper: :horizontal_large

          = save_or_cancel(form: m, back_path: patient_modalities_path(patient))
