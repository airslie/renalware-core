table.sortables(style="list-style-type: none;")
  thead(style="position: sticky; top: 0; background-color:#fff;")
    th.col-width-tiny
      i.fas.fa-arrows-alt-v
      i.fas.fa-question-circle.inline.ml-1.text-blue-500(title="Drag the 'hamburger' icon to change the order of columns in the table")
    th.col-width-medium
      | SQL column name
      i.fas.fa-question-circle.inline.ml-1.text-blue-500(title="The programatic name for the data item, determined by the 'SQL view' in use.")
    th.col-width-tiny
      | Hide
      i.fas.fa-question-circle.inline.ml-1.text-blue-500(title="Don't show this column in the table")
    th
      | Label
      i.fas.fa-question-circle.inline.ml-1.text-blue-500(title="The text displayed in the column heading")
    th.col-width-medium
      | Width
      i.fas.fa-question-circle.inline.ml-1.text-blue-500(title="Controls the table column width")
    th.col-width-tiny
      | Truncate
      i.fas.fa-question-circle.inline.ml-1.text-blue-500(title="Will truncate and append an ellipsis to text constrained by its cell width")

  tbody
    - view.columns.each_with_index do |col, _idx|
      tr.sortable
          td.handle.border-0.text-left
            i.fas.fa-bars
            input(type="hidden" name="view_metadata[columns][][code]" value=col.code)
          td.border-0
            code= col.code
          td.text-center.border-0
            input.m-0(type="checkbox" name="view_metadata[columns][][hidden]" checked=col.hidden style="margin:0")
          td.border-0
            input.m-0(type="text" name="view_metadata[columns][][name]" value=col.name style="margin:0")
          td.border-0
            select.m-0(name="view_metadata[columns][][width]" style="margin: 0")
              option(value="")
              - Renalware::System::ColumnDefinition.new.width_values.each do |val, x|
                option(value=val selected=(col.width == val.to_s))=val.to_s.humanize
          td.text-center.border-0
            input.m-0(type="checkbox" name="view_metadata[columns][][truncate]" style="margin:0" checked=col.truncate)

            / fc.input(type="checkbox" value=col checked=view.columns.include?(col) name="view_metadata[columns][visible]")
            / input(bestchecked=view.columns.include?(col) name="view_metadata[columns][title]")
            / label(class="" for="view_metadata_columns_#{col}" style="display: inline-block; width: auto")= col.humanize
