table.letters.electronic-ccs.has-togglable-rows
  thead
    tr
      th.col-width-tiny State
      th.col-width-date Date
      th.col-width-date-time Read at
      th.col-width-medium Author
      th.at-least.col-width-medium Patient
      th.col-width-nhs-no NHS no.
      th.col-width-reference-no Hosp no.
      th Description
      th.col-width-small

  tbody
    - receipts.each do |receipt|
      - letter = Renalware::Letters::LetterPresenter.new(receipt.letter)
      - patient = letter.patient

      tr(id=receipt.html_identifier class=letter.state.dasherize)
        td.state
          span= letter.state_description
        td= l(letter.issued_on)
        td= l(receipt.read_at)
        td= letter.author
        td= default_patient_link(patient)
        td= patient.nhs_number
        td= patient.hospital_identifiers
        td.col-width-medium-with-ellipsis= letter.description
        td.col-width-medium.actions
          = link_to "Toggle", "##{receipt.html_preview_identifier}", data: { behaviour: "toggler" }
          = link_to letter.view_label,
                    patient_letters_letter_path(letter.patient, letter, back_url: request.fullpath)

      = content_tag(:tr, id: receipt.html_preview_identifier, style: "display: none")
        td
        td(colspan=7)
          .quick-preview
            = simple_format letter.body

        td.nowrap
          - if Pundit.policy!(current_user, receipt).mark_as_read?
            ul.actions
              li= link_to "Keep as unread",
                          "##{receipt.html_preview_identifier}",
                          data: { behaviour: "toggler" },
                          class: "button secondary keep-as-unread"

              li= link_to(mark_as_read_letters_letter_electronic_receipt_path(letter, receipt),
                          class: "button mark-as-read",
                          method: :patch,
                          remote: true) do
                i.fas.fa-check
                | Mark as read
