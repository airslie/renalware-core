name: Verify

# Do not run when a tag pushed, or when merging to main
# Do not run if updating docs
on:
  push:
    tags-ignore:
      - "*"
    branches-ignore:
      - main
    paths-ignore:
      - "docs/**"
      - "README.md"

# Cancel any running actions triggered on the same branch.
# NB: github.ref is the branch or tag that triggered the workflow run.
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  BUNDLE_GITHUB__COM: ${{ secrets.CR_PAT }}
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  RAILS_ENV: test
  PGHOST: localhost

jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Rubocop
        run: bundle exec rubocop

      - name: Setup node and yarn with caching
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install js packages with yarn
        run: yarn install --frozen-lockfile # optional, --immutable

      - name: Asset cache
        uses: actions/cache@v4
        with:
          path: |
            demo/public/assets
            demo/tmp/cache/assets/sprockets
          key: asset-cache-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            asset-cache-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
            asset-cache-${{ runner.os }}-${{ github.ref }}-
            asset-cache-${{ runner.os }}-

      - name: Assets precompile
        run: bin/rails assets:precompile --trace

      - name: Run security checks
        run: |
          bundle exec bundle audit --update

  tests:
    needs: linters
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        command:
          - bin/gh/rspec/unit
          - bin/gh/rspec/integration
          - bin/gh/cucumber/domain
          - bin/gh/cucumber/web

    name: ${{ matrix.command }}

    services:
      postgres:
        image: postgres:16.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup node and yarn with caching
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install js packages with yarn
        run: yarn install --frozen-lockfile # optional, --immutable

      - name: Restore asset cache
        uses: actions/cache@v4
        with:
          path: |
            demo/public/assets
            demo/tmp/cache/assets/sprockets
          key: asset-cache-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}

      - name: Setup test database
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          RAILS_ENV: test
          PGHOST: localhost
        run: bin/rails db:create app:db:schema:load

      - name: Update packages
        run: sudo apt update

      - name: Install dependencies
        run: sudo apt install -y ghostscript pandoc

      - name: Run tests
        env:
          PGHOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          RAILS_ENV: test
        run: ${{ matrix.command }}


      - name: Store test failure screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-failure-screenshots
          path: demo/tmp/capybara
          if-no-files-found: ignore
